stages:
  - test

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file:
      - '.gitlab-ci-check-commits.yml'
      - '.gitlab-ci-check-license.yml'
      - '.gitlab-ci-github-status-updates.yml'
      - '.gitlab-ci-check-shell-format.yml'

test:check-shell-formatting:
  before_script:
    - SHELL_SCRIPTS="src/app src/app-modules/docker-compose gen/app-gen tests/app/run.sh tests/app/scenarios/00_basic_ArtifactInstall.run.sh"

test:smoketests:
  stage: test
  variables:
    DOCKER_BUILDKIT: 0
    COMPOSE_DOCKER_CLI_BUILD: 0
  tags:
    - docker
  image: tiangolo/docker-with-compose
  services:
    - name: docker:20.10.10-dind-alpine3.14
      alias: docker
  before_script:
    - apk --update --no-cache add bash gawk curl aws-cli tree xz jq wget xdelta3 openssl1.1-compat
  script:
    - ./tests/app/run.sh
    - ./tests/gen/run.sh
  artifacts:
    expire_in: 2w
    paths:
      - tests/app/data/docker/output
      - tests/gen/data/docker/output
    when: always

test:acceptancetests:
  variables:
    DOCKER_BUILDKIT: 0
    COMPOSE_DOCKER_CLI_BUILD: 0
  services:
    - name: docker:20.10.10-dind-alpine3.14
      alias: docker
#   variables:
#     DOCKER_BUILDKIT: 0
#     COMPOSE_DOCKER_CLI_BUILD: 0
#     DOCKER_HOST: "tcp://docker:2376"
#     DOCKER_CERT_PATH: "/certs/client"
#     DOCKER_TLS_VERIFY: 1
#     DOCKER_TLS_CERTDIR: "/certs"
  stage: test
  tags:
    - docker
  image: debian:11
  before_script:
    - apt-get update
    - apt install apt-transport-https ca-certificates curl gnupg2 software-properties-common -y
    - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    - apt update
    - apt-cache policy docker-ce
    - apt install docker-ce lsof -y
#     - service docker start
#     - /usr/bin/dockerd --storage-opt dm.fs=ext4 &
#     - mkdir /etc/docker
#     - echo "{" > /etc/docker/daemon.json
#     - echo >> /etc/docker/daemon.json
##     - echo '  "storage-driver": "overlay2"' >> /etc/docker/daemon.json
#     - echo "}" >> /etc/docker/daemon.json
#     - cat /etc/docker/daemon.json 
# - /usr/bin/dockerd --storage-driver=overlay2 &
    - /usr/bin/dockerd --storage-driver=aufs &
    - sleep 32
    - find / -name '*docker*'
    - ps axuw | grep docker
    - lsof | grep docker
#     - journalctl -u docker
#     - journalctl -u dockerd
  script:
    - sleep 32
    - docker ps
    - docker --version
