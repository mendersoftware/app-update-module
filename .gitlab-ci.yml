variables:
  DEBIAN_FRONTEND: noninteractive
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_TLS_VERIFY: "1"
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - test

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file:
      - '.gitlab-ci-check-commits.yml'
      - '.gitlab-ci-check-license.yml'
      - '.gitlab-ci-github-status-updates.yml'
      - '.gitlab-ci-check-shell-format.yml'

test:check-shell-formatting:
  before_script:
    - SHELL_SCRIPTS="src/app src/app-modules/docker-compose gen/app-gen tests/app/run.sh tests/app/scenarios/00_basic_ArtifactInstall.run.sh acceptance-tests/scenarios.d/00.basic.non.delta.successful.sh acceptance-tests/run.sh acceptance-tests/bt/main.sh acceptance-tests/bt/lib/functions.sh acceptance-tests/bt/bt.sh"

test:smoketests:
  stage: test
  variables:
    DOCKER_BUILDKIT: 0
    COMPOSE_DOCKER_CLI_BUILD: 0
  tags:
    - docker
  image: tiangolo/docker-with-compose
  services:
    - name: docker:20.10.10-dind-alpine3.14
      alias: docker
  before_script:
    - apk --update --no-cache add bash gawk curl aws-cli tree xz jq wget xdelta3 openssl1.1-compat gcompat
  script:
    - ./tests/app/run.sh
    - ./tests/gen/run.sh
  artifacts:
    expire_in: 2w
    paths:
      - tests/app/data/docker/output
      - tests/gen/data/docker/output
    when: always

test:acceptancetests:
  stage: test
  image: ubuntu:20.04
  services:
    - docker:dind
  before_script:
    - apt update && apt install -yy bash wget xz-utils awscli docker.io curl make xdelta3 tree containerd
    - docker ps
    - docker info
    - mkdir -p ~/.docker/cli-plugins/
    - curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
    - chmod +x ~/.docker/cli-plugins/docker-compose
    - ~/.docker/cli-plugins/docker-compose --help
    - cp ~/.docker/cli-plugins/docker-compose /usr/bin/
    - docker compose version
    - echo "installing k3d"
    - wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/bin/kubectl

  script:
    - ./acceptance-tests/run.sh
