variables:
  DEBIAN_FRONTEND: noninteractive
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_TLS_VERIFY: "1"
  DOCKER_TLS_CERTDIR: "/certs"
  DEFAULT_BRANCH: "master"
  GITHUB_REPO_URL:
    description: "The Github Repo URL for release-please, in the format of 'owner/repo'"
    value: "mendersoftware/app-update-module"
  GITHUB_USER_NAME:
    description: "The Github username for release-please"
    value: "mender-test-bot"
  GITHUB_USER_EMAIL:
    description: "The Github user email for release-please"
    value: "mender@northern.tech"
  GITHUB_CHANGELOG_REPO_URL:
    description: "The Github Repo URL where to push the changelog"
    value: "mendersoftware/mender-docs-changelog"
  CHANGELOG_REMOTE_FILE:
    description: "The changelog file in the remote changelog repo"
    value: "70.app-update-module/docs.md"
  GIT_CLIFF:
    description: "Run git cliff to override the release-please changelog"
    value: "true"
    options:
      - "true"
      - "false"

stages:
  - test
  - changelog
  - release

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file:
      - '.gitlab-ci-check-commits.yml'
      - '.gitlab-ci-check-license.yml'
      - '.gitlab-ci-github-status-updates.yml'
      - '.gitlab-ci-check-shell-format.yml'

.docker_login_registries: &docker_login_registries |
  docker login -u "$REGISTRY_MENDER_IO_USERNAME" -p "$REGISTRY_MENDER_IO_PASSWORD" registry.mender.io || \
    echo "Warning: registry.mender.io credentials unavailable or invalid"
  docker login -u "$DOCKER_HUB_USERNAME" -p "$DOCKER_HUB_PASSWORD" || \
    echo "Warning: Docker credentials unavailable or invalid"

test:check-shell-formatting:
  before_script:
    - SHELL_SCRIPTS="src/app src/app-modules/docker-compose gen/app-gen tests/app/run.sh tests/app/scenarios/00_basic_ArtifactInstall.run.sh acceptance-tests/scenarios.d/00.basic.non.delta.successful.sh acceptance-tests/run.sh acceptance-tests/bt/main.sh acceptance-tests/bt/lib/functions.sh acceptance-tests/bt/bt.sh"

test:smoketests:
  stage: test
  variables:
    DOCKER_BUILDKIT: 0
    COMPOSE_DOCKER_CLI_BUILD: 0
  tags:
    # docker login doesn't work for this job: Cannot perform an interactive login from a non TTY device
    - mender-qa-worker-generic-light
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/tiangolo/docker-with-compose
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:20.10.10-dind-alpine3.14
      alias: docker
  before_script:
    - apk --update --no-cache add bash gawk curl aws-cli tree xz jq wget xdelta3 openssl1.1-compat gcompat
  script:
    - ./tests/app/run.sh
    - ./tests/gen/run.sh
  artifacts:
    expire_in: 2w
    paths:
      - tests/app/data/docker/output
      - tests/gen/data/docker/output
    when: always

test:acceptancetests:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/ubuntu:20.04
  tags:
    # docker privileged is required for this job
    - mender-qa-worker-generic-light
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:23.0.5-dind-alpine3.17
      alias: docker
  before_script:
    - *docker_login_registries
    - apt update && apt install -yy bash wget xz-utils awscli docker.io curl make xdelta3 tree containerd
    - docker ps
    - docker info
    - mkdir -p ~/.docker/cli-plugins/
    - curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
    - chmod +x ~/.docker/cli-plugins/docker-compose
    - ~/.docker/cli-plugins/docker-compose --help
    - cp ~/.docker/cli-plugins/docker-compose /usr/bin/
    - docker compose version
    - echo "installing k3d"
    - wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/bin/kubectl

  script:
    - ./acceptance-tests/run.sh

changelog:
  image: "registry.gitlab.com/northern.tech/mender/mender-test-containers:release-please-v1-master"
  stage: changelog
  variables:
    GIT_DEPTH: 0  # Always get the full history
    GIT_STRATEGY: clone  # Always get the full history
  tags:
    - hetzner-amd-beefy
  rules:
    - if: $CI_COMMIT_BRANCH =~ "/^v\d+\.\d+\.x$/"
    - if: $CI_COMMIT_BRANCH == $DEFAULT_BRANCH
    # Exclude release tags
    - if: $CI_COMMIT_TAG
      when: never
  before_script:
    # Setting up git
    - git config --global user.email "${GITHUB_USER_EMAIL}"
    - git config --global user.name "${GITHUB_USER_NAME}"
    # GITHUB_TOKEN for Github cli authentication
    - export GITHUB_TOKEN=${GITHUB_CLI_TOKEN}
    # getting the centralized git cliff config
  script:
    - release-please release-pr
      --token=${GITHUB_BOT_TOKEN_REPO_FULL}
      --repo-url=${GITHUB_REPO_URL}
      --target-branch=${CI_COMMIT_REF_NAME} || echo "INFO - release already exists" # workaround because we shifted to prerelease versioning strategy and there's already a PR open
    # git cliff: override the changelog
    - test $GIT_CLIFF == "false" && echo "INFO - Skipping git-cliff" && exit 0
    - git remote add github-${CI_JOB_ID} https://${GITHUB_USER_NAME}:${GITHUB_BOT_TOKEN_REPO_FULL}@github.com/${GITHUB_REPO_URL} || true  # Ignore already existing remote
    - gh repo set-default https://${GITHUB_USER_NAME}:${GITHUB_BOT_TOKEN_REPO_FULL}@github.com/${GITHUB_REPO_URL}
    - RELEASE_PLEASE_PR=$(gh pr list --author "${GITHUB_USER_NAME}" --head "release-please--branches--${CI_COMMIT_REF_NAME}" --json number | jq -r '.[0].number // empty')
    - test -z "$RELEASE_PLEASE_PR" && echo "No release-please PR found" && exit 0
    - cp CHANGELOG.md CHANGELOG.md.${CI_COMMIT_SHA}
    - gh pr checkout --force $RELEASE_PLEASE_PR
    - mv CHANGELOG.md.${CI_COMMIT_SHA} CHANGELOG.md
    - wget --output-document cliff.toml https://raw.githubusercontent.com/mendersoftware/mendertesting/master/utils/cliff.toml
    - RELEASE_VERSION="$(jq -r '.["."]' .release-please-manifest.json)"
    - git cliff --unreleased --prepend CHANGELOG.md --github-repo ${GITHUB_REPO_URL} --use-branch-tags --tag ${RELEASE_VERSION}
    - git add CHANGELOG.md
    - git commit --amend -s --no-edit
    - git push github-${CI_JOB_ID} --force
    # Update the PR body
    - git cliff --unreleased --bump -o tmp_pr_body.md --github-repo ${GITHUB_REPO_URL} --use-branch-tags
    - gh pr edit $RELEASE_PLEASE_PR --body-file tmp_pr_body.md
    - rm tmp_pr_body.md
  after_script:
    - git remote remove github-${CI_JOB_ID}

release:github:
  image: "registry.gitlab.com/northern.tech/mender/mender-test-containers:release-please-v1-master"
  stage: .post
  tags:
    - hetzner-amd-beefy
  rules:
    # Only make available for protected branches (main and maintenance branches)
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
      when: never
    - if: $CI_COMMIT_BRANCH =~ "/^v\d+\.\d+\.x$/" && $CI_COMMIT_BRANCH == $DEFAULT_BRANCH
      when: manual
      allow_failure: true
    # Exclude release tags
    - if: $CI_COMMIT_TAG
      when: never
  needs:
    - job: changelog
  script:
    - release-please github-release
      --token=${GITHUB_BOT_TOKEN_REPO_FULL}
      --repo-url=${GITHUB_REPO_URL}
      --target-branch=${CI_COMMIT_REF_NAME}

release:mender-docs-changelog:
  image: "registry.gitlab.com/northern.tech/mender/mender-test-containers:release-please-v1-master"
  stage: .post
  tags:
    - hetzner-amd-beefy
  rules:
    # Only make available for stable branches
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
      allow_failure: true
  before_script:
    # Setting up git
    - git config --global user.email "${GITHUB_USER_EMAIL}"
    - git config --global user.name "${GITHUB_USER_NAME}"
    # GITHUB_TOKEN for Github cli authentication
    - export GITHUB_TOKEN=${GITHUB_CLI_TOKEN}
  script:
    - git clone https://${GITHUB_USER_NAME}:${GITHUB_BOT_TOKEN_REPO_FULL}@github.com/${GITHUB_CHANGELOG_REPO_URL}
    - cd ${GITHUB_CHANGELOG_REPO_URL#*/}
    - git checkout -b changelog-${CI_JOB_ID}
    - cat ../.docs_header.md > ${CHANGELOG_REMOTE_FILE}
    - cat ../CHANGELOG.md | grep -v -E '^---' >> ${CHANGELOG_REMOTE_FILE}
    - git add ${CHANGELOG_REMOTE_FILE}
    - 'git commit -s -m "chore: add $CI_PROJECT_NAME changelog"'
    - git push origin changelog-${CI_JOB_ID}
    - gh pr create --title "Update CHANGELOG.md for $CI_PROJECT_NAME" --body "Automated change to the CHANGELOG.md file" --base master --head changelog-${CI_JOB_ID}

release:mender-dist-packages:
  stage: release
  when: manual
  trigger:
    project: Northern.tech/Mender/mender-dist-packages
    strategy: depend
  variables:
    MENDER_APP_UPDATE_MODULE_VERSION: ${CI_COMMIT_TAG}
  rules:
    - if: $CI_COMMIT_TAG =~ "/^\d+\.\d+\.\d+$/"
